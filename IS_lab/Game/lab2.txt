Below is the starter code with the solution from the first laboratory exercise.

Your task will be to appropriately transform the existing MVC implementation into an Onion architecture. The Repository layer, including the IRepository interface and its generic implementation Repository, is included in the starter code. Additionally, interfaces with basic CRUD operations for all models are provided. You are required to create implementations for all service layer interfaces and adapt the controllers so that the dependency on ApplicationDbContext is removed and the service methods are used instead. For Dependency Injection to work properly, the services must be correctly registered in Program.cs.

You should implement a View and the corresponding service methods for adding an Participation. On the Athletes index page, an additional action Add Participation should be added, leading to a form where the Competition is selected from a drop-down list. DateRegistered should be automatically populated with the current timestamp at the moment the record is created.

Bonus task:

In the Participation model, add a reference to AthletesApplicationUser, and upon record creation, the currently logged-in user should be saved.


@model Game.Domain.DomainModels.Tournament

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>
<h4>Profession</h4>

<!-- TODO: Create Table for Tournament -->

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateCreated)
        </dd>
    </dl>
</div>

<h4>Athletes in Tournament</h4>

<table class="table">
    <thead>
        <tr>
            <th>
                Full Name
            </th>

            <th>
                Date of Birth
            </th>
            <th>
                Jersey Number
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.AthleteInTournaments)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Athlete.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Athlete.DateOfBirth)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Athlete.JerseyNumber)
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="row">
    <div class="col-md-12">
        <div class="alert alert-info">
            <strong>Total Patients: </strong> @Model.AthleteInTournaments.Count
        </div>
    </div>
</div>